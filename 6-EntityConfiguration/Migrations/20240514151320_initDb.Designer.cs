// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using _6_EntityConfiguration.Dbcontexts;

#nullable disable

namespace _6_EntityConfiguration.Migrations
{
    [DbContext(typeof(SqlDbconetext))]
    [Migration("20240514151320_initDb")]
    partial class initDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("_6_EntityConfiguration.Models.Concrete.Brans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BransAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 5, 14, 15, 13, 19, 824, DateTimeKind.Utc).AddTicks(4488));

                    b.HasKey("Id");

                    b.HasIndex("BransAdi")
                        .IsUnique();

                    b.ToTable("Branslar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BransAdi = "Matematik",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BransAdi = "Fizik",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BransAdi = "Edebiyat",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("_6_EntityConfiguration.Models.Concrete.Ogrenci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("Cinsiyet")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 5, 14, 15, 13, 19, 824, DateTimeKind.Utc).AddTicks(6804));

                    b.Property<int>("SinifId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SinifId");

                    b.ToTable("Ogrenciler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdSoyad = "Ali yilmaz",
                            Cinsiyet = true,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SinifId = 1
                        },
                        new
                        {
                            Id = 2,
                            AdSoyad = "Veli durmaz",
                            Cinsiyet = true,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SinifId = 1
                        },
                        new
                        {
                            Id = 3,
                            AdSoyad = "Ayse kaya",
                            Cinsiyet = false,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SinifId = 1
                        });
                });

            modelBuilder.Entity("_6_EntityConfiguration.Models.Concrete.Ogretmen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("BransId")
                        .HasColumnType("integer");

                    b.Property<bool>("Cinsiyet")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 5, 14, 15, 13, 19, 824, DateTimeKind.Utc).AddTicks(9661));

                    b.HasKey("Id");

                    b.HasIndex("BransId");

                    b.ToTable("Ogretmenler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdSoyad = "Fatma Guner",
                            BransId = 1,
                            Cinsiyet = true,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AdSoyad = "Hanife Kaçmaz",
                            BransId = 2,
                            Cinsiyet = false,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AdSoyad = "Hasan Durmaz",
                            BransId = 3,
                            Cinsiyet = true,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("_6_EntityConfiguration.Models.Concrete.Sinif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 5, 14, 15, 13, 19, 825, DateTimeKind.Utc).AddTicks(2180));

                    b.Property<byte>("Kapasite")
                        .HasColumnType("smallint");

                    b.Property<string>("SinifAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("SinifAdi")
                        .IsUnique();

                    b.ToTable("Sinifar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Kapasite = (byte)40,
                            SinifAdi = "11 A"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Kapasite = (byte)50,
                            SinifAdi = "11 B"
                        });
                });

            modelBuilder.Entity("_6_EntityConfiguration.Models.Concrete.Ogrenci", b =>
                {
                    b.HasOne("_6_EntityConfiguration.Models.Concrete.Sinif", "Sinif")
                        .WithMany("Ogrenciler")
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sinif");
                });

            modelBuilder.Entity("_6_EntityConfiguration.Models.Concrete.Ogretmen", b =>
                {
                    b.HasOne("_6_EntityConfiguration.Models.Concrete.Brans", "Brans")
                        .WithMany("Ogretmenler")
                        .HasForeignKey("BransId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brans");
                });

            modelBuilder.Entity("_6_EntityConfiguration.Models.Concrete.Brans", b =>
                {
                    b.Navigation("Ogretmenler");
                });

            modelBuilder.Entity("_6_EntityConfiguration.Models.Concrete.Sinif", b =>
                {
                    b.Navigation("Ogrenciler");
                });
#pragma warning restore 612, 618
        }
    }
}
